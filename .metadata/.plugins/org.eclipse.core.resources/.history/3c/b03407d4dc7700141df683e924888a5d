package hr.fer.zemris.optjava.dz5.part1.GeneticAlgorithm;

/**
 * This class implements k-tournament selection, but also provides
 * a method for random choosing the parents.
 * 
 * @author kristijan
 *
 */

public class SelectionOperator {

	private int k;
	
	/**
	 * The constructor takes parameter k which indicates the type
	 * of the tournament selection.
	 * 
	 * @param k
	 */
	
	public SelectionOperator(int k) {
		this.k = k;
	}
	
	/**
	 * Tournament selection method (without possible repeating solutions).
	 * @param fitness Fitness array for every solution in population.
	 * @return index Chosen solution
	 */
	
	public boolean[][] chooseBothTournament(boolean[][] population) {
		boolean[][] parents = new boolean[2][population.length];
		for(int i = 0; i < 2; i++) {
			int[] randomIndex = new int[this.k];
			int j = 0;
			do {
				int index = (int)Math.round(Math.random() * population.length);
				for(int z = 0; z < randomIndex.length; z++) {
					if(index == randomIndex[z]) {
						j--;
					}
				}
				j++;
			} while(j < k);
		}
		return parents;
	}
	
	public boolean[][] chooseOneRandom() {
		
	}
	
}
